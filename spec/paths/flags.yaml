Flags:
  get:
    summary: Get a list of all features in the given project.
    operationId: getFeatureFlags
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKeyQuery'
      - $ref: '#/parameters/SummaryQuery'
      - $ref: '#/parameters/ArchivedQuery'
      - $ref: '#/parameters/LimitQuery'
      - $ref: '#/parameters/OffsetQuery'
      - $ref: '#/parameters/FilterQuery'
      - $ref: '#/parameters/SortQuery'
      - $ref: '#/parameters/Tag'
    responses:
      '200':
        description: Flags response.
        schema:
          $ref: '#/definitions/FeatureFlags'
      '401':
        $ref: '#/responses/Standard401'
    tags:
      - Feature flags
  post:
    summary: Creates a new feature flag.
    operationId: postFeatureFlag
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagPostRequest'
      - $ref: '#/parameters/CloneFlagKeyQuery'
    responses:
      '201':
        description: Flag response.
        schema:
          $ref: '#/definitions/FeatureFlag'
      '400':
        $ref: '#/responses/Standard400'
      '401':
        $ref: '#/responses/Standard401'
      '409':
        $ref: '#/responses/Standard409'
    tags:
      - Feature flags
Flag:
  get:
    summary: Get a single feature flag by key.
    operationId: getFeatureFlag
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKeyQuery'
    responses:
      '200':
        description: Flag response.
        schema:
          $ref: '#/definitions/FeatureFlag'
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
  patch:
    summary: Perform a partial update to a feature.
    operationId: patchFeatureFlag
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/PatchWithComment'
    responses:
      '200':
        description: Feature flag response.
        schema:
          $ref: '#/definitions/FeatureFlag'
      '400':
        $ref: '#/responses/Standard400'
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
      '409':
        $ref: '#/responses/Standard409'
    tags:
      - Feature flags
  delete:
    summary: Delete a feature flag in all environments. Be careful-- only delete feature flags that are no longer being used by your application.
    operationId: deleteFeatureFlag
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
    responses:
      '204':
        $ref: '#/responses/Standard204'
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags

FlagCopy:
  post:
    summary: Copies the feature flag configuration from one environment to the same feature flag in another environment.
    operationId: copyFeatureFlag
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/FeatureFlagCopyBody'
    responses:
      '201':
        description: Flag configuration copy response.
        schema:
          $ref: '#/definitions/FeatureFlag'
      '400':
        $ref: '#/responses/Standard400'
      '401':
        $ref: '#/responses/Standard401'
      '409':
        $ref: '#/responses/Standard409'
    tags:
      - Feature flags

FlagStatuses:
  get:
    summary: Get a list of statuses for all feature flags. The status includes the last time the feature flag was requested, as well as the state of the flag.
    operationId: getFeatureFlagStatuses
    parameters:
    - $ref: '#/parameters/ProjectKey'
    - $ref: '#/parameters/EnvironmentKey'
    responses:
      '200':
        description: List of feature flag statuses.
        schema:
          $ref: '#/definitions/FeatureFlagStatuses'
      '401':
        $ref: '#/responses/Standard401'
    tags:
      - Feature flags
FlagStatus:
  get:
    summary: Get the status for a particular feature flag.
    operationId: getFeatureFlagStatus
    parameters:
    - $ref: '#/parameters/ProjectKey'
    - $ref: '#/parameters/EnvironmentKey'
    - $ref: '#/parameters/FeatureFlagKey'
    responses:
      '200':
        description: Status of the requested feature flag.
        schema:
          $ref: '#/definitions/FeatureFlagStatus'
      '401':
        $ref: '#/responses/Standard401'
    tags:
      - Feature flags
FlagStatusAcrossEnvironments:
  get:
    summary: Get the status for a particular feature flag across environments
    operationId: getFeatureFlagStatusAcrossEnvironments
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
    responses:
      '200':
        description: Status of the requested feature flag across environments
        schema:
          $ref: '#/definitions/FeatureFlagStatusAcrossEnvironments'
      '401':
        $ref: '#/responses/Standard401'
      '403':
        $ref: '#/responses/BetaApi403'
    tags:
      - Feature flags
UserTargetingExpirationForFlag:
  get:
    summary: Get expiring user targets for feature flag
    operationId: getExpiringUserTargets
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/FeatureFlagKey'
    responses:
      '200':
        description: User targets of the requested feature flag.
        schema:
          $ref: '#/definitions/UserTargetingExpirationForFlags'
      '401':
        $ref: '#/responses/Standard401'
    tags:
      - Feature flags
  patch:
    summary: Update, add, or delete expiring user targets on feature flag
    operationId: patchExpiringUserTargets
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/SemanticPatchWithComment'
    responses:
      '200':
        description: User targeting expirations on feature flag response.
        schema:
          $ref: '#/definitions/UserTargetingExpirationForFlags'
      '400':
        $ref: '#/responses/Standard400'
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
      '409':
        $ref: '#/responses/Standard409'
    tags:
      - Feature flags
FlagConfigScheduledChanges:
  get:
    summary: Get all scheduled workflows for a feature flag by key.
    operationId: getFlagConfigScheduledChanges
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKey'
    responses:
      '200':
        schema:
          $ref: '#/definitions/FeatureFlagScheduledChanges'
        description: A list of scheduled changes for feature flag response.
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
  post:
    summary: Creates a new scheduled change for a feature flag.
    operationId: postFlagConfigScheduledChanges
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FlagConfigScheduledChangesPostBody'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKey'
    responses:
      '201':
        description: A scheduled change for feature flag response.
        schema:
          $ref: '#/definitions/FeatureFlagScheduledChange'
      '400':
        $ref: '#/responses/Standard400'
      '401':
        $ref: '#/responses/Standard401'
      '409':
        $ref: '#/responses/Standard409'
    tags:
      - Feature flags
FlagConfigScheduledChange:
  get:
    summary: Get a scheduled change on a feature flag by id.
    operationId: getFlagConfigScheduledChange
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/ScheduledChangeId'
    responses:
      '200':
        schema:
          $ref: '#/definitions/FeatureFlagScheduledChange'
        description: A scheduled change for feature flag response.
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
  patch:
    summary: Updates an existing scheduled-change on a feature flag in an environment.
    operationId: patchFlagConfigScheduledChange
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/FlagConfigScheduledChangesPatchBody'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/ScheduledChangeId'
    responses:
      '201':
        description: A Scheduled change for feature flag response.
        schema:
          $ref: '#/definitions/FeatureFlagScheduledChange'
      '400':
        $ref: '#/responses/Standard400'
      '401':
        $ref: '#/responses/Standard401'
      '409':
        $ref: '#/responses/Standard409'
    tags:
      - Feature flags
  delete:
    summary: Delete a scheduled change on a feature flag in an environment.
    operationId: deleteFlagConfigScheduledChanges
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/ScheduledChangeId'
    responses:
      '204':
        $ref: '#/responses/Standard204'
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
FlagConfigScheduledChangesConflicts:
  post:
    summary: Lists conflicts between the given instructions and any existing scheduled changes for the feature flag. The actual HTTP verb should be REPORT, not POST.
    operationId: getFlagConfigScheduledChangesConflicts
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/FlagConfigScheduledChangesConflictsBody'
    responses:
      '200':
        schema:
          $ref: '#/definitions/FeatureFlagScheduledChangesConflicts'
        description: Scheduled changes conflict response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags

# Global scheduled changes routes
FeatureFlagScheduledChanges:
  get:
    summary: Get all scheduled workflows for a feature flag by key.
    operationId: getFeatureFlagScheduledChanges
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
    responses:
      '200':
        schema:
          $ref: '#/definitions/FeatureFlagScheduledChanges'
        description: A list of scheduled changes for feature flag response.
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
  post:
    summary: Creates a new scheduled change for a feature flag.
    operationId: postFeatureFlagScheduledChanges
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FlagConfigScheduledChangesPostBody'
      - $ref: '#/parameters/FeatureFlagKey'
    responses:
      '201':
        description: A scheduled change for feature flag response.
        schema:
          $ref: '#/definitions/FeatureFlagScheduledChange'
      '400':
        $ref: '#/responses/Standard400'
      '401':
        $ref: '#/responses/Standard401'
      '409':
        $ref: '#/responses/Standard409'
    tags:
      - Feature flags
FeatureFlagScheduledChange:
  get:
    summary: Get a scheduled change on a feature flag by id.
    operationId: getFeatureFlagScheduledChange
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/ScheduledChangeId'
    responses:
      '200':
        schema:
          $ref: '#/definitions/FeatureFlagScheduledChange'
        description: A scheduled change for feature flag response.
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
  patch:
    summary: Updates an existing scheduled-change on a feature flag.
    operationId: patchFeatureFlagScheduledChange
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/FlagConfigScheduledChangesPatchBody'
      - $ref: '#/parameters/ScheduledChangeId'
    responses:
      '201':
        description: A Scheduled change for feature flag response.
        schema:
          $ref: '#/definitions/FeatureFlagScheduledChange'
      '400':
        $ref: '#/responses/Standard400'
      '401':
        $ref: '#/responses/Standard401'
      '409':
        $ref: '#/responses/Standard409'
    tags:
      - Feature flags
  delete:
    summary: Delete a scheduled change on a feature flag.
    operationId: deleteFeatureFlagScheduledChanges
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/ScheduledChangeId'
    responses:
      '204':
        $ref: '#/responses/Standard204'
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
FeatureFlagScheduledChangesConflicts:
  post:
    summary: Lists conflicts between the given instructions and any existing scheduled changes for the feature flag. The actual HTTP verb should be REPORT, not POST.
    operationId: getFeatureFlagScheduledChangesConflicts
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/FlagConfigScheduledChangesConflictsBody'
    responses:
      '200':
        schema:
          $ref: '#/definitions/FeatureFlagScheduledChangesConflicts'
        description: Scheduled changes conflict response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags

FlagConfigApprovalRequests:
  get:
    operationId: getApprovalRequests
    summary: Get all approval requests for a feature flag config
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKey'
    responses:
      '200':
        schema:
          $ref: '#/definitions/ApprovalRequests'
        description: Approval requests response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
FlagConfigApprovalRequest:
  get:
    operationId: getApprovalRequest
    summary: Get a single approval request for a feature flag config
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/ApprovalRequestId'
    responses:
      '200':
        schema:
          $ref: '#/definitions/ApprovalRequest'
        description: Approval request response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
  post:
    operationId: postApprovalRequest
    summary: Create an approval request for a feature flag config
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/ApprovalRequestId'
      - $ref: '#/parameters/ApprovalRequestPostRequest'
    responses:
      '201':
        schema:
          $ref: '#/definitions/ApprovalRequest'
        description: Approval request response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
  delete:
    operationId: deleteApprovalRequest
    summary: Delete an approval request for a feature flag config
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/ApprovalRequestId'
      - $ref: '#/parameters/ApprovalRequestPostRequest'
    responses:
      '204':
        $ref: '#/responses/Standard204'
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
FlagConfigApplyApprovalRequest:
  post:
    operationId: postApplyApprovalRequest
    summary: Apply approval request for a feature flag config
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/ApprovalRequestId'
      - $ref: '#/parameters/ApprovalRequestApplyPostRequest'
    responses:
      '200':
        schema:
          $ref: '#/definitions/ApprovalRequest'
        description: Approval request applied response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
FlagConfigReviewApprovalRequest:
  post:
    operationId: postReviewApprovalRequest
    summary: Review approval request for a feature flag config
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/ApprovalRequestId'
      - $ref: '#/parameters/ApprovalRequestReviewPostRequest'
    responses:
      '200':
        schema:
          $ref: '#/definitions/ApprovalRequest'
        description: Approval request reviewed response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
FlagConfigApprovalRequestFlagCopy:
  post:
    operationId: postApprovalRequestFlagCopy
    summary: Create an approval request to copy feature flag config
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/ApprovalRequestFlagCopyPostRequest'
    responses:
      '201':
        schema:
          $ref: '#/definitions/ApprovalRequest'
        description: Approval request applied response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
      '409':
        $ref: '#/responses/Standard409'
    tags:
      - Feature flags
# approval requests for global flag changes
FeatureFlagApprovalRequests:
  get:
    operationId: getFeatureFlagApprovalRequests
    summary: Get all approval requests for a feature flag
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
    responses:
      '200':
        schema:
          $ref: '#/definitions/ApprovalRequests'
        description: Approval requests response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
FeatureFlagApprovalRequest:
  get:
    operationId: getFeatureFlagApprovalRequest
    summary: Get a single approval request for a feature flag
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/ApprovalRequestId'
    responses:
      '200':
        schema:
          $ref: '#/definitions/ApprovalRequests'
        description: Approval request response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
  post:
    operationId: postFeatureFlagApprovalRequest
    summary: Create an approval request for a feature flag
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/ApprovalRequestId'
      - $ref: '#/parameters/ApprovalRequestPostRequest'
    responses:
      '200':
        schema:
          $ref: '#/definitions/ApprovalRequest'
        description: Approval request response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
  delete:
    operationId: deleteFeatureFlagApprovalRequest
    summary: Delete a approval request for a feature flag
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/ApprovalRequestId'
      - $ref: '#/parameters/ApprovalRequestPostRequest'
    responses:
      '204':
        $ref: '#/responses/Standard204'
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
ApplyFeatureFlagApprovalRequest:
  post:
    operationId: postApplyFeatureFlagApprovalRequest
    summary: Apply approval request for a feature flag
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/ApprovalRequestId'
      - $ref: '#/parameters/ApprovalRequestApplyPostRequest'
    responses:
      '200':
        schema:
          $ref: '#/definitions/ApprovalRequests'
        description: Approval request applied response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
ReviewFeatureFlagApprovalRequest:
  post:
    operationId: postReviewFeatureFlagApprovalRequest
    summary: Review approval request for a feature flag
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
      - $ref: '#/parameters/ApprovalRequestId'
      - $ref: '#/parameters/ApprovalRequestReviewPostRequest'
    responses:
      '200':
        schema:
          $ref: '#/definitions/ApprovalRequests'
        description: Approval request reviewed response
      '401':
        $ref: '#/responses/Standard401'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
DependentFlagsByEnvironment:
  get:
    summary: Get dependent flags for the flag in the environment specified in path parameters
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/EnvironmentKey'
      - $ref: '#/parameters/FeatureFlagKey'
    responses:
      '200':
        description: Dependent flags in a single envrionemnt response
        schema:
          $ref: '#/definitions/DependentFlagsByEnvironment'
      '401':
        $ref: '#/responses/Standard401'
      '403':
        $ref: '#/responses/BetaApi403'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags
DependentFlags:
  get:
    summary: Get dependent flags across all environments for the flag specified in the path parameters
    parameters:
      - $ref: '#/parameters/ProjectKey'
      - $ref: '#/parameters/FeatureFlagKey'
    responses:
      '200':
        description: Dependent flags accross all environemnts in the project response
        schema:
          $ref: '#/definitions/MultiEnvironmentDependentFlags'
      '401':
        $ref: '#/responses/Standard401'
      '403':
        $ref: '#/responses/BetaApi403'
      '404':
        $ref: '#/responses/Standard404'
    tags:
      - Feature flags